FROM wordpress:latest

# Install system dependencies, PHP extensions, and Node.js/Yarn
RUN apt-get update && apt-get install -y \
    git \
    unzip \
    libzip-dev \
    nodejs \
    npm \
    default-mysql-client \
    subversion \
    && npm install -g yarn \
    && rm -rf /var/lib/apt/lists/* \
    && docker-php-ext-install zip

# Install Composer globally
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set the working directory for the app installation
WORKDIR /usr/src/app

# Copy dependency definition files first and install
COPY composer.json composer.lock package.json yarn.lock ./
RUN COMPOSER_MEMORY_LIMIT=2G composer install --prefer-dist
RUN yarn install --frozen-lockfile

# Copy the entire project into the container
COPY . .

# Set PHPCS installed_paths from the root vendor directory
RUN php -d memory_limit=2G ./vendor/bin/phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs,vendor/phpcsstandards/phpcsutils

# Copy utility and CI scripts and make them executable
COPY ./scripts/wait-for-it.sh /usr/local/bin/wait-for-it.sh
COPY ./ci.sh /ci.sh
RUN chmod +x /usr/local/bin/wait-for-it.sh
RUN chmod +x /ci.sh

# The entrypoint will be the CI script itself
ENTRYPOINT ["/ci.sh"]

# End of Dockerfile
# Trigger CI build 

# CI cache-busting: force rebuild for Dockerfile.ci update #build-ci 