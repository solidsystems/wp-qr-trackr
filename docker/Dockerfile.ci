FROM wordpress:latest

# Install system dependencies, PHP extensions, and Node.js/Yarn (Node present but Playwright not installed in CI)
RUN apt-get update && apt-get install -y \
    git \
    unzip \
    libzip-dev \
    nodejs \
    default-mysql-client \
    subversion \
    gnupg \
    && rm -rf /var/lib/apt/lists/* \
    && docker-php-ext-install zip

# Install Yarn (official method)
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
    && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
    && apt-get update && apt-get install -y yarn

# Install Composer globally
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install Lefthook for container-based git hooks
RUN curl -1sLf 'https://dl.cloudsmith.io/public/evilmartians/lefthook/setup.sh' | bash
ENV PATH="/root/.local/bin:${PATH}"

# Set the working directory
WORKDIR /usr/src/app

# Configure Git to trust the directory
RUN git config --global --add safe.directory /usr/src/app

# Copy dependency definition files first
COPY package.json yarn.lock ./
COPY composer.json composer.lock ./

# Install dependencies with proper memory limits
ENV COMPOSER_MEMORY_LIMIT=2G
RUN yarn --version >/dev/null 2>&1 || true

RUN composer install --prefer-dist --no-scripts

# Copy only the necessary project files (excluding vendor directory)
# Copy core plugin files
COPY wp-qr-trackr.php ./
COPY includes/ ./includes/
COPY templates/ ./templates/
COPY config/ ./config/
COPY scripts/ ./scripts/
COPY ci.sh ./

# Copy wp-content directory (excluding vendor)
COPY wp-content/ ./wp-content/

# Skip E2E dependencies in CI. Playwright and JS deps are dev-only and installed via local control scripts.
WORKDIR /usr/src/app

# Install dependencies again with scripts (now that all files are present)
RUN composer install --prefer-dist

# Do NOT install Playwright in CI builds. Playwright is dev-only per project policy.

# Install additional PHPCS standards
RUN composer require --dev phpcsstandards/phpcsextra:^1.1.0

# Set PHPCS installed_paths to include all standards
RUN php -d memory_limit=2G ./vendor/bin/phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs,vendor/phpcsstandards/phpcsutils,vendor/phpcsstandards/phpcsextra

# Copy utility scripts
COPY ./scripts/wait-for-it.sh /usr/local/bin/wait-for-it.sh
RUN chmod +x /usr/local/bin/wait-for-it.sh

# The entrypoint will be the CI script
COPY ci.sh /ci.sh
RUN chmod +x /ci.sh

ENTRYPOINT ["/ci.sh"]

# Cache-busting: Force rebuild for dependency and PHPCS fixes #build-ci

# End of Dockerfile
# Trigger CI build

# CI cache-busting: force rebuild for Dockerfile.ci update #build-ci

# This Dockerfile is for CI/E2E testing only. Playwright and test dependencies are ONLY installed here.
# Do NOT use this Dockerfile for production or nonprod environments.
