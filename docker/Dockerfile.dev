# Dockerfile for wp-qr-trackr dev environment (port 8080)
# Playwright is installed here ONLY for automated UI testing and screenshot capture in dev.
# Do NOT install Playwright in production or nonprod images.

FROM wordpress:php8.1-apache

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
        curl \
        less \
        gnupg \
        default-mysql-client \
        unzip \
        wget \
        git \
        && rm -rf /var/lib/apt/lists/*

# Install Node.js and Playwright for UI testing
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get update && \
    apt-get install -y nodejs && \
    npm install -g yarn && \
    yarn global add playwright && \
    npx playwright install --with-deps

# Install WP-CLI
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \
    && chmod +x wp-cli.phar \
    && mv wp-cli.phar /usr/local/bin/wp

# Allow WP-CLI to run as root inside the container to avoid interactive warnings
ENV WP_CLI_ALLOW_ROOT=1

# Set up WordPress directories and permissions
RUN mkdir -p /var/www/html/wp-content/plugins \
    && mkdir -p /var/www/html/wp-content/uploads \
    && mkdir -p /var/www/html/wp-content/upgrade \
    && chown -R www-data:www-data /var/www/html/wp-content \
    && chmod -R 755 /var/www/html/wp-content

# Suppress Apache FQDN warning
RUN echo 'ServerName localhost' > /etc/apache2/conf-available/servername.conf \
    && a2enconf servername

# Download and install Query Monitor plugin
RUN cd /var/www/html/wp-content/plugins \
    && wget -O query-monitor.zip https://downloads.wordpress.org/plugin/query-monitor.latest-stable.zip \
    && unzip -o query-monitor.zip \
    && rm query-monitor.zip \
    && chown -R www-data:www-data /var/www/html/wp-content/plugins/query-monitor

# Create plugin directory for wp-qr-trackr
RUN mkdir -p /var/www/html/wp-content/plugins/wp-qr-trackr \
    && chown -R www-data:www-data /var/www/html/wp-content/plugins/wp-qr-trackr

# Copy entrypoint script
COPY scripts/docker-dev-entrypoint.sh /usr/local/bin/docker-dev-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-dev-entrypoint.sh

# Set working directory
WORKDIR /var/www/html

ENTRYPOINT ["/usr/local/bin/docker-dev-entrypoint.sh"]
CMD ["apache2-foreground"]
