services:
  wordpress-dev:
    image: wordpress:latest
    ports:
      - "8080:80" # Dev environment runs on port 8080
    environment:
      WORDPRESS_DB_HOST: db-dev:3306
      WORDPRESS_DB_USER: wpuser
      WORDPRESS_DB_PASSWORD: wppass
      WORDPRESS_DB_NAME: wpdb
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME','http://localhost:8080');
        define('WP_SITEURL','http://localhost:8080');
        define('WP_ENVIRONMENT_TYPE','development');
    depends_on:
      - db-dev
    volumes:
      - ./php.ini:/usr/local/etc/php/conf.d/99-custom.ini
      - ./wp-content/plugins/wp-qr-trackr:/var/www/html/wp-content/plugins/wp-qr-trackr # Live-mount plugin for dev

  # Sidecar WP-CLI container for setup and automation
  wpcli-dev:
    image: wordpress:cli
    depends_on:
      - wordpress-dev
      - db-dev
    environment:
      WORDPRESS_DB_HOST: db-dev:3306
      WORDPRESS_DB_USER: wpuser
      WORDPRESS_DB_PASSWORD: wppass
      WORDPRESS_DB_NAME: wpdb
      WP_HOME: http://localhost:8080
      WP_SITEURL: http://localhost:8080
    volumes:
      - ./wp-content/plugins/wp-qr-trackr:/var/www/html/wp-content/plugins/wp-qr-trackr
      - ./php.ini:/usr/local/etc/php/conf.d/99-custom.ini
    entrypoint: ["tail", "-f", "/dev/null"] # Idle by default; run commands with 'docker compose exec wpcli-dev ...'
    # Usage: docker compose exec wpcli-dev wp core install ...

  db-dev:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: wpdb
      MYSQL_USER: wpuser
      MYSQL_PASSWORD: wppass
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - db_data_dev:/var/lib/mysql

  ci-runner:
    build:
      context: .
      dockerfile: Dockerfile.ci
    depends_on:
      - db-dev
    volumes:
      - ./wp-content/plugins:/var/www/html/wp-content/plugins
      - ./ci.sh:/ci.sh
    working_dir: /var/www/html/wp-content/plugins/wp-qr-trackr
    environment:
      WORDPRESS_DB_HOST: db-dev:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
    entrypoint: ["/bin/bash", "/ci.sh"]

volumes:
  db_data_dev:
    # Persistent database storage 